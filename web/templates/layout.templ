package templates

type LayoutData struct {
	Title        string
	CurrentPage  string
	FlashMessage string
	FlashType    string
	Content      templ.Component
}

templ Layout(data LayoutData) {
	<!DOCTYPE html>
	<html lang="en" class="no-js">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ data.Title } - SocGo</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<link rel="stylesheet" href="/static/css/app.css"/>
			<noscript>
				<style>
					.js-only { display: none !important; }
					.htmx-indicator { display: none !important; }
				</style>
			</noscript>
		</head>
		<body class="bg-gray-100 min-h-screen">
			<script>
				// Remove no-js class if JavaScript is enabled
				document.documentElement.classList.remove('no-js');
			</script>
			
			@Navbar(data.CurrentPage)
			
			<main class="container mx-auto px-4 py-8">
				if data.FlashMessage != "" {
					<div id="flash-message" class={ "mb-4 p-4 rounded-lg " + getFlashClass(data.FlashType) }>
						{ data.FlashMessage }
					</div>
				}
				
				@data.Content
			</main>
			
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script>
				// Auto-hide flash messages after 5 seconds
				const flashMessage = document.getElementById('flash-message');
				if (flashMessage) {
					setTimeout(() => {
						flashMessage.style.transition = 'opacity 0.5s';
						flashMessage.style.opacity = '0';
						setTimeout(() => flashMessage.remove(), 500);
					}, 5000);
				}
			</script>
		</body>
	</html>
}

func getFlashClass(flashType string) string {
	switch flashType {
	case "error":
		return "bg-red-100 text-red-800"
	case "success":
		return "bg-green-100 text-green-800"
	default:
		return "bg-blue-100 text-blue-800"
	}
} 